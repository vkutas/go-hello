name: Build Docker image, push to the registry and deploy applicaiton
on:
  push:
    tags:
      - '*-release'
    branches:
     - 'main'  
  pull_request:
    tags:
      - '*-release'
jobs:
 run_tests:
   strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
   runs-on: ubuntu-latest
    
   steps:
     - uses: actions/checkout@master

     - uses: actions/setup-go@v2
       with:
         go-version: ${{ matrix.go-version }}

     - name: Run golint
       uses: golangci/golangci-lint-action@v2
       with:
         version: v1.29

 buld_and_push:
   runs-on: [ubuntu-latest]
   needs: [run_tests]

   steps:
  
    - name: Get image tag
      id: get_tag
      run: echo ::set-output name=TAG::${GITHUB_REF##*/}

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_LOGIN }}
        password: ${{ secrets.DOCKER_HUB_PASS }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_HUB_LOGIN }}/${{ secrets.DOCKER_HUB_REPO }}:${{ steps.get_tag.outputs.TAG }}
  
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

 deploy:
   runs-on: [ubuntu-latest]
   needs: [buld_and_push]
   steps: 
     - name: Get image tag
       id: get_tag
       run: echo ::set-output name=TAG::${GITHUB_REF##*/}

     - name: Send webhook for deploy
       run: "curl -s -S -f -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_HUB_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_HUB_REPO }}\", \"tag\": \"${{ steps.get_tag.outputs.TAG }}\", \"ports\": {\"app_port\": 3001, \"host_port\": 3001}}'"
