name: Test sources, build container and Deploy Application
on:
  push:
    branches:
       - 'add_deploy_action'
    tags:
      - '*-release'

jobs:
  run_tests:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@master

      - name: Install Go 1.16.3
        uses: actions/setup-go@v2
        with:
         go-version: '1.16.3'
        
      - name: Install Go Linters
        run: go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.26.0
      
      - name: Run Go linter
        run: cd hi-go && golangci-lint run hello.go

  build_and_push:
    runs-on: [ubuntu-latest]
    needs: [run_tests]

    steps:
      
      - name: Get image tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF##*/}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASS }}

      - name: Build and push
        id: bulid_and_push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_LOGIN }}/${{ secrets.DOCKER_HUB_REPO }}:${{ steps.get_tag.outputs.TAG }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
  deploy:
    runs-on: [ubuntu-latest]
    needs: [build_and_push]
    steps: 
      - name: Get image tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF##*/}

      - name: Send webhook for deploy
        run: "curl -s -S -f -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_HUB_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_HUB_REPO }}\", \"tag\": \"${{ steps.get_tag.outputs.TAG }}\", \"ports\": {\"3000\": 8081}}'"
